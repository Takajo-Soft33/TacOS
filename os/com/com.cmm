/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2016 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * com/com.cmm : シリアルサーバの本体、シリアル入力の受付とシリアル出力をする
 *
 * 2016.10.28 : 新規作成
 *
 * $Id$
 *
 */

#include <util.h>
#include <kernel.h>
#include <syscall.h>
#include "com.h"
#include "serial.h"

// -------------------------- comTec システムコール --------------------------

// comTec システムコールの本体 (TeCとの通信の行う)
int sysComTec(int port, int value) {
  if(!(port>=0x28 && port<=0x2d)) return -1; // I/Oポートサクセス禁止エリア
  if(value<0 || value>0xff) return -2; // 値がおかしい
  out(port,value);
  return 0;
}

// -------------------------- putSIO システムコール --------------------------

// putSIOシステムコールの本体（シリアル出力を行う）
int sysPutSIO(int c) {
  putSerialCode(chr(c));
  return 0;
}

// -------------------------- getSIO システムコール --------------------------

// getSIOシステムコールの本体（シリアル入力を行う）
int sysGetSIO() {
  return ord(getSerialCode());
}

// ----------------------------- 要求待ち受け部 -------------------------------

// 端末サーバの本体(ここで各システムコールを実行する)
int comSysCall(int op, int prm1, int prm2) {
  if (op==COMTEC) {
    op = sysComTec(prm1, prm2);                          // comTec(port, value)
  }else if (op==PUTSIO) {
    op = sysPutSIO(prm1);                                // putSIO(c)
  }else if (op==GETSIO) {
    op = sysGetSIO();                                    // getSIO(c)
  } else  op= -1;                                        // エラー
  return op;
}

// クライアントとランデブする
public void comMain() {
  serialInit();
  comLink = newLink();                                  // リンクを生成する
  while (true) {                                        // システムコールを待つ
    Link l = receive(comLink);                          // システムコールを受信
    int r = comSysCall(l.op, l.prm1, l.prm2);           // システムコールを指示
    send(comLink, r);                                   // 結果を返す
  }
}

//----------------------------------------------------------------------------
// システムコールインターフェイス
//   クライアントプロセスが以下のルーチンを呼出しサーバと IPC する
//----------------------------------------------------------------------------
// comTec システムコール
public int comTec(int port, int value) {
  int r = sndrec(comLink, COMTEC, port, value, 0);
  return r;
}

// putSIO システムコール
public int putSIO(int c){
  int r = sndrec(comLink, PUTSIO, c, 0, 0);
  return r;
}

// getSIO システムコール
public int getSIO(){
  int r = sndrec(comLink, GETSIO, 0, 0, 0);
  return r;
}